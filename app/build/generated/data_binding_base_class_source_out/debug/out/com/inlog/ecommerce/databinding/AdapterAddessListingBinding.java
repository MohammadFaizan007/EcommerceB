// Generated by view binder compiler. Do not edit!
package com.inlog.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inlog.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterAddessListingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgDelete;

  @NonNull
  public final ImageView imgEdit;

  @NonNull
  public final LinearLayout llDelete;

  @NonNull
  public final LinearLayout llEditDelete;

  @NonNull
  public final LinearLayout llmakeDefault;

  @NonNull
  public final RadioButton radBtn;

  @NonNull
  public final TextView txtAddressDetails;

  @NonNull
  public final TextView txtDefaultId;

  @NonNull
  public final TextView txtVMakeOrSelectId;

  private AdapterAddessListingBinding(@NonNull LinearLayout rootView, @NonNull ImageView imgDelete,
      @NonNull ImageView imgEdit, @NonNull LinearLayout llDelete,
      @NonNull LinearLayout llEditDelete, @NonNull LinearLayout llmakeDefault,
      @NonNull RadioButton radBtn, @NonNull TextView txtAddressDetails,
      @NonNull TextView txtDefaultId, @NonNull TextView txtVMakeOrSelectId) {
    this.rootView = rootView;
    this.imgDelete = imgDelete;
    this.imgEdit = imgEdit;
    this.llDelete = llDelete;
    this.llEditDelete = llEditDelete;
    this.llmakeDefault = llmakeDefault;
    this.radBtn = radBtn;
    this.txtAddressDetails = txtAddressDetails;
    this.txtDefaultId = txtDefaultId;
    this.txtVMakeOrSelectId = txtVMakeOrSelectId;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterAddessListingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterAddessListingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_addess_listing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterAddessListingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgDelete;
      ImageView imgDelete = rootView.findViewById(id);
      if (imgDelete == null) {
        break missingId;
      }

      id = R.id.imgEdit;
      ImageView imgEdit = rootView.findViewById(id);
      if (imgEdit == null) {
        break missingId;
      }

      id = R.id.llDelete;
      LinearLayout llDelete = rootView.findViewById(id);
      if (llDelete == null) {
        break missingId;
      }

      id = R.id.llEditDelete;
      LinearLayout llEditDelete = rootView.findViewById(id);
      if (llEditDelete == null) {
        break missingId;
      }

      id = R.id.llmakeDefault;
      LinearLayout llmakeDefault = rootView.findViewById(id);
      if (llmakeDefault == null) {
        break missingId;
      }

      id = R.id.radBtn;
      RadioButton radBtn = rootView.findViewById(id);
      if (radBtn == null) {
        break missingId;
      }

      id = R.id.txtAddressDetails;
      TextView txtAddressDetails = rootView.findViewById(id);
      if (txtAddressDetails == null) {
        break missingId;
      }

      id = R.id.txtDefaultId;
      TextView txtDefaultId = rootView.findViewById(id);
      if (txtDefaultId == null) {
        break missingId;
      }

      id = R.id.txtVMakeOrSelectId;
      TextView txtVMakeOrSelectId = rootView.findViewById(id);
      if (txtVMakeOrSelectId == null) {
        break missingId;
      }

      return new AdapterAddessListingBinding((LinearLayout) rootView, imgDelete, imgEdit, llDelete,
          llEditDelete, llmakeDefault, radBtn, txtAddressDetails, txtDefaultId, txtVMakeOrSelectId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
