// Generated by view binder compiler. Do not edit!
package com.inlog.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.inlog.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterProductAttributeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardViTitle;

  @NonNull
  public final TextView cardcolor;

  @NonNull
  public final LinearLayout layout;

  @NonNull
  public final TextView txtVTitle;

  private AdapterProductAttributeBinding(@NonNull LinearLayout rootView,
      @NonNull CardView cardViTitle, @NonNull TextView cardcolor, @NonNull LinearLayout layout,
      @NonNull TextView txtVTitle) {
    this.rootView = rootView;
    this.cardViTitle = cardViTitle;
    this.cardcolor = cardcolor;
    this.layout = layout;
    this.txtVTitle = txtVTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterProductAttributeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterProductAttributeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_product_attribute, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterProductAttributeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardViTitle;
      CardView cardViTitle = rootView.findViewById(id);
      if (cardViTitle == null) {
        break missingId;
      }

      id = R.id.cardcolor;
      TextView cardcolor = rootView.findViewById(id);
      if (cardcolor == null) {
        break missingId;
      }

      id = R.id.layout;
      LinearLayout layout = rootView.findViewById(id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.txtVTitle;
      TextView txtVTitle = rootView.findViewById(id);
      if (txtVTitle == null) {
        break missingId;
      }

      return new AdapterProductAttributeBinding((LinearLayout) rootView, cardViTitle, cardcolor,
          layout, txtVTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
