// Generated by view binder compiler. Do not edit!
package com.inlog.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.inlog.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCartListBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout activityCartList;

  @NonNull
  public final Button back;

  @NonNull
  public final TextView deliverychanges;

  @NonNull
  public final TextView discount;

  @NonNull
  public final TextView header;

  @NonNull
  public final EmptyMessageLayoutActionBinding layoutCartEmpty;

  @NonNull
  public final LinearLayout layoutItems;

  @NonNull
  public final RelativeLayout layoutPayment;

  @NonNull
  public final LinearLayout llRewardPoints;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final RelativeLayout onev;

  @NonNull
  public final TextView priceitems;

  @NonNull
  public final TextView priceitemsval;

  @NonNull
  public final RecyclerView recyclRedeemPoints;

  @NonNull
  public final RecyclerView recyclerview;

  @NonNull
  public final CardView redeemvc;

  @NonNull
  public final TextView textActionBottom1;

  @NonNull
  public final TextView textActionBottom2;

  @NonNull
  public final TextView totalamt;

  @NonNull
  public final TextView txtVIdRedeemPoints;

  @NonNull
  public final TextView txtVRedeemPointsId;

  @NonNull
  public final TextView txtVRedeemWorthId;

  @NonNull
  public final TextView txtVTaxVat;

  @NonNull
  public final TextView txtVTotalRedeemPoints;

  @NonNull
  public final TextView txtVTotalSavingOnThisCard;

  @NonNull
  public final TextView txtVcancelRedeemPointsId;

  private ActivityCartListBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout activityCartList, @NonNull Button back,
      @NonNull TextView deliverychanges, @NonNull TextView discount, @NonNull TextView header,
      @NonNull EmptyMessageLayoutActionBinding layoutCartEmpty, @NonNull LinearLayout layoutItems,
      @NonNull RelativeLayout layoutPayment, @NonNull LinearLayout llRewardPoints,
      @NonNull NestedScrollView nestedScrollView, @NonNull RelativeLayout onev,
      @NonNull TextView priceitems, @NonNull TextView priceitemsval,
      @NonNull RecyclerView recyclRedeemPoints, @NonNull RecyclerView recyclerview,
      @NonNull CardView redeemvc, @NonNull TextView textActionBottom1,
      @NonNull TextView textActionBottom2, @NonNull TextView totalamt,
      @NonNull TextView txtVIdRedeemPoints, @NonNull TextView txtVRedeemPointsId,
      @NonNull TextView txtVRedeemWorthId, @NonNull TextView txtVTaxVat,
      @NonNull TextView txtVTotalRedeemPoints, @NonNull TextView txtVTotalSavingOnThisCard,
      @NonNull TextView txtVcancelRedeemPointsId) {
    this.rootView = rootView;
    this.activityCartList = activityCartList;
    this.back = back;
    this.deliverychanges = deliverychanges;
    this.discount = discount;
    this.header = header;
    this.layoutCartEmpty = layoutCartEmpty;
    this.layoutItems = layoutItems;
    this.layoutPayment = layoutPayment;
    this.llRewardPoints = llRewardPoints;
    this.nestedScrollView = nestedScrollView;
    this.onev = onev;
    this.priceitems = priceitems;
    this.priceitemsval = priceitemsval;
    this.recyclRedeemPoints = recyclRedeemPoints;
    this.recyclerview = recyclerview;
    this.redeemvc = redeemvc;
    this.textActionBottom1 = textActionBottom1;
    this.textActionBottom2 = textActionBottom2;
    this.totalamt = totalamt;
    this.txtVIdRedeemPoints = txtVIdRedeemPoints;
    this.txtVRedeemPointsId = txtVRedeemPointsId;
    this.txtVRedeemWorthId = txtVRedeemWorthId;
    this.txtVTaxVat = txtVTaxVat;
    this.txtVTotalRedeemPoints = txtVTotalRedeemPoints;
    this.txtVTotalSavingOnThisCard = txtVTotalSavingOnThisCard;
    this.txtVcancelRedeemPointsId = txtVcancelRedeemPointsId;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCartListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCartListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cart_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCartListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout activityCartList = (RelativeLayout) rootView;

      id = R.id.back;
      Button back = rootView.findViewById(id);
      if (back == null) {
        break missingId;
      }

      id = R.id.deliverychanges;
      TextView deliverychanges = rootView.findViewById(id);
      if (deliverychanges == null) {
        break missingId;
      }

      id = R.id.discount;
      TextView discount = rootView.findViewById(id);
      if (discount == null) {
        break missingId;
      }

      id = R.id.header;
      TextView header = rootView.findViewById(id);
      if (header == null) {
        break missingId;
      }

      id = R.id.layout_cart_empty;
      View layoutCartEmpty = rootView.findViewById(id);
      if (layoutCartEmpty == null) {
        break missingId;
      }
      EmptyMessageLayoutActionBinding binding_layoutCartEmpty = EmptyMessageLayoutActionBinding.bind(layoutCartEmpty);

      id = R.id.layout_items;
      LinearLayout layoutItems = rootView.findViewById(id);
      if (layoutItems == null) {
        break missingId;
      }

      id = R.id.layout_payment;
      RelativeLayout layoutPayment = rootView.findViewById(id);
      if (layoutPayment == null) {
        break missingId;
      }

      id = R.id.llRewardPoints;
      LinearLayout llRewardPoints = rootView.findViewById(id);
      if (llRewardPoints == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = rootView.findViewById(id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.onev;
      RelativeLayout onev = rootView.findViewById(id);
      if (onev == null) {
        break missingId;
      }

      id = R.id.priceitems;
      TextView priceitems = rootView.findViewById(id);
      if (priceitems == null) {
        break missingId;
      }

      id = R.id.priceitemsval;
      TextView priceitemsval = rootView.findViewById(id);
      if (priceitemsval == null) {
        break missingId;
      }

      id = R.id.recyclRedeemPoints;
      RecyclerView recyclRedeemPoints = rootView.findViewById(id);
      if (recyclRedeemPoints == null) {
        break missingId;
      }

      id = R.id.recyclerview;
      RecyclerView recyclerview = rootView.findViewById(id);
      if (recyclerview == null) {
        break missingId;
      }

      id = R.id.redeemvc;
      CardView redeemvc = rootView.findViewById(id);
      if (redeemvc == null) {
        break missingId;
      }

      id = R.id.text_action_bottom1;
      TextView textActionBottom1 = rootView.findViewById(id);
      if (textActionBottom1 == null) {
        break missingId;
      }

      id = R.id.text_action_bottom2;
      TextView textActionBottom2 = rootView.findViewById(id);
      if (textActionBottom2 == null) {
        break missingId;
      }

      id = R.id.totalamt;
      TextView totalamt = rootView.findViewById(id);
      if (totalamt == null) {
        break missingId;
      }

      id = R.id.txtVIdRedeemPoints;
      TextView txtVIdRedeemPoints = rootView.findViewById(id);
      if (txtVIdRedeemPoints == null) {
        break missingId;
      }

      id = R.id.txtVRedeemPointsId;
      TextView txtVRedeemPointsId = rootView.findViewById(id);
      if (txtVRedeemPointsId == null) {
        break missingId;
      }

      id = R.id.txtVRedeemWorthId;
      TextView txtVRedeemWorthId = rootView.findViewById(id);
      if (txtVRedeemWorthId == null) {
        break missingId;
      }

      id = R.id.txtVTaxVat;
      TextView txtVTaxVat = rootView.findViewById(id);
      if (txtVTaxVat == null) {
        break missingId;
      }

      id = R.id.txtVTotalRedeemPoints;
      TextView txtVTotalRedeemPoints = rootView.findViewById(id);
      if (txtVTotalRedeemPoints == null) {
        break missingId;
      }

      id = R.id.txtVTotalSavingOnThisCard;
      TextView txtVTotalSavingOnThisCard = rootView.findViewById(id);
      if (txtVTotalSavingOnThisCard == null) {
        break missingId;
      }

      id = R.id.txtVcancelRedeemPointsId;
      TextView txtVcancelRedeemPointsId = rootView.findViewById(id);
      if (txtVcancelRedeemPointsId == null) {
        break missingId;
      }

      return new ActivityCartListBinding((RelativeLayout) rootView, activityCartList, back,
          deliverychanges, discount, header, binding_layoutCartEmpty, layoutItems, layoutPayment,
          llRewardPoints, nestedScrollView, onev, priceitems, priceitemsval, recyclRedeemPoints,
          recyclerview, redeemvc, textActionBottom1, textActionBottom2, totalamt,
          txtVIdRedeemPoints, txtVRedeemPointsId, txtVRedeemWorthId, txtVTaxVat,
          txtVTotalRedeemPoints, txtVTotalSavingOnThisCard, txtVcancelRedeemPointsId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
