// Generated by view binder compiler. Do not edit!
package com.inlog.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import co.lujun.androidtagview.TagContainerLayout;
import com.inlog.ecommerce.R;
import com.inlog.ecommerce.rangeslider.RangeSeekBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutFilterBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button applyObj;

  @NonNull
  public final LinearLayout bottomlt;

  @NonNull
  public final Button cancelObj;

  @NonNull
  public final TextView headertwo;

  @NonNull
  public final LinearLayout mainview;

  @NonNull
  public final RangeSeekBar rangeSeekBar;

  @NonNull
  public final RecyclerView rcyVProductVarients;

  @NonNull
  public final RecyclerView rcyVProductVarientsSize;

  @NonNull
  public final RecyclerView recyclerViewListItem;

  @NonNull
  public final Button resetObj;

  @NonNull
  public final RelativeLayout rlMain;

  @NonNull
  public final SearchView searchBrandId;

  @NonNull
  public final TagContainerLayout tagcontainerLayout1;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView txtVIdAttributeLabelId;

  @NonNull
  public final TextView txtVIdAttributeSizeLabelId;

  private LayoutFilterBinding(@NonNull RelativeLayout rootView, @NonNull Button applyObj,
      @NonNull LinearLayout bottomlt, @NonNull Button cancelObj, @NonNull TextView headertwo,
      @NonNull LinearLayout mainview, @NonNull RangeSeekBar rangeSeekBar,
      @NonNull RecyclerView rcyVProductVarients, @NonNull RecyclerView rcyVProductVarientsSize,
      @NonNull RecyclerView recyclerViewListItem, @NonNull Button resetObj,
      @NonNull RelativeLayout rlMain, @NonNull SearchView searchBrandId,
      @NonNull TagContainerLayout tagcontainerLayout1, @NonNull TextView textView,
      @NonNull TextView textView2, @NonNull TextView txtVIdAttributeLabelId,
      @NonNull TextView txtVIdAttributeSizeLabelId) {
    this.rootView = rootView;
    this.applyObj = applyObj;
    this.bottomlt = bottomlt;
    this.cancelObj = cancelObj;
    this.headertwo = headertwo;
    this.mainview = mainview;
    this.rangeSeekBar = rangeSeekBar;
    this.rcyVProductVarients = rcyVProductVarients;
    this.rcyVProductVarientsSize = rcyVProductVarientsSize;
    this.recyclerViewListItem = recyclerViewListItem;
    this.resetObj = resetObj;
    this.rlMain = rlMain;
    this.searchBrandId = searchBrandId;
    this.tagcontainerLayout1 = tagcontainerLayout1;
    this.textView = textView;
    this.textView2 = textView2;
    this.txtVIdAttributeLabelId = txtVIdAttributeLabelId;
    this.txtVIdAttributeSizeLabelId = txtVIdAttributeSizeLabelId;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutFilterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutFilterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_filter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutFilterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.apply_obj;
      Button applyObj = rootView.findViewById(id);
      if (applyObj == null) {
        break missingId;
      }

      id = R.id.bottomlt;
      LinearLayout bottomlt = rootView.findViewById(id);
      if (bottomlt == null) {
        break missingId;
      }

      id = R.id.cancel_obj;
      Button cancelObj = rootView.findViewById(id);
      if (cancelObj == null) {
        break missingId;
      }

      id = R.id.headertwo;
      TextView headertwo = rootView.findViewById(id);
      if (headertwo == null) {
        break missingId;
      }

      id = R.id.mainview;
      LinearLayout mainview = rootView.findViewById(id);
      if (mainview == null) {
        break missingId;
      }

      id = R.id.rangeSeekBar;
      RangeSeekBar rangeSeekBar = rootView.findViewById(id);
      if (rangeSeekBar == null) {
        break missingId;
      }

      id = R.id.rcyVProductVarients;
      RecyclerView rcyVProductVarients = rootView.findViewById(id);
      if (rcyVProductVarients == null) {
        break missingId;
      }

      id = R.id.rcyVProductVarientsSize;
      RecyclerView rcyVProductVarientsSize = rootView.findViewById(id);
      if (rcyVProductVarientsSize == null) {
        break missingId;
      }

      id = R.id.recyclerViewListItem;
      RecyclerView recyclerViewListItem = rootView.findViewById(id);
      if (recyclerViewListItem == null) {
        break missingId;
      }

      id = R.id.reset_obj;
      Button resetObj = rootView.findViewById(id);
      if (resetObj == null) {
        break missingId;
      }

      RelativeLayout rlMain = (RelativeLayout) rootView;

      id = R.id.searchBrandId;
      SearchView searchBrandId = rootView.findViewById(id);
      if (searchBrandId == null) {
        break missingId;
      }

      id = R.id.tagcontainerLayout1;
      TagContainerLayout tagcontainerLayout1 = rootView.findViewById(id);
      if (tagcontainerLayout1 == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = rootView.findViewById(id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.txtVIdAttributeLabelId;
      TextView txtVIdAttributeLabelId = rootView.findViewById(id);
      if (txtVIdAttributeLabelId == null) {
        break missingId;
      }

      id = R.id.txtVIdAttributeSizeLabelId;
      TextView txtVIdAttributeSizeLabelId = rootView.findViewById(id);
      if (txtVIdAttributeSizeLabelId == null) {
        break missingId;
      }

      return new LayoutFilterBinding((RelativeLayout) rootView, applyObj, bottomlt, cancelObj,
          headertwo, mainview, rangeSeekBar, rcyVProductVarients, rcyVProductVarientsSize,
          recyclerViewListItem, resetObj, rlMain, searchBrandId, tagcontainerLayout1, textView,
          textView2, txtVIdAttributeLabelId, txtVIdAttributeSizeLabelId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
