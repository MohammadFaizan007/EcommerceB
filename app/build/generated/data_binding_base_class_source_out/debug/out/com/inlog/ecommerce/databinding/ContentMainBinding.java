// Generated by view binder compiler. Do not edit!
package com.inlog.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.GridView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.daimajia.slider.library.Indicators.PagerIndicator;
import com.daimajia.slider.library.SliderLayout;
import com.inlog.ecommerce.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView cdView;

  @NonNull
  public final FrameLayout contentMain;

  @NonNull
  public final PagerIndicator customIndicator;

  @NonNull
  public final RatingBar deliveryRatingbar;

  @NonNull
  public final TextView description;

  @NonNull
  public final RatingBar goodqualityRatingbar;

  @NonNull
  public final GridView gridViewImageText;

  @NonNull
  public final LinearLayout mainlv;

  @NonNull
  public final RatingBar popRatingbar;

  @NonNull
  public final RatingBar professionalRatingbar;

  @NonNull
  public final LinearLayout ratinglayout;

  @NonNull
  public final RatingBar responsiveRatingbar;

  @NonNull
  public final CircleImageView shopkeeperImage;

  @NonNull
  public final TextView shopkeeperName;

  @NonNull
  public final TextView shopname;

  @NonNull
  public final TextView shoprating;

  @NonNull
  public final SliderLayout slider;

  @NonNull
  public final ScrollView svContainer;

  @NonNull
  public final RelativeLayout tempid;

  @NonNull
  public final RelativeLayout topview;

  @NonNull
  public final View view;

  @NonNull
  public final Button viewObj;

  private ContentMainBinding(@NonNull RelativeLayout rootView, @NonNull CardView cdView,
      @NonNull FrameLayout contentMain, @NonNull PagerIndicator customIndicator,
      @NonNull RatingBar deliveryRatingbar, @NonNull TextView description,
      @NonNull RatingBar goodqualityRatingbar, @NonNull GridView gridViewImageText,
      @NonNull LinearLayout mainlv, @NonNull RatingBar popRatingbar,
      @NonNull RatingBar professionalRatingbar, @NonNull LinearLayout ratinglayout,
      @NonNull RatingBar responsiveRatingbar, @NonNull CircleImageView shopkeeperImage,
      @NonNull TextView shopkeeperName, @NonNull TextView shopname, @NonNull TextView shoprating,
      @NonNull SliderLayout slider, @NonNull ScrollView svContainer, @NonNull RelativeLayout tempid,
      @NonNull RelativeLayout topview, @NonNull View view, @NonNull Button viewObj) {
    this.rootView = rootView;
    this.cdView = cdView;
    this.contentMain = contentMain;
    this.customIndicator = customIndicator;
    this.deliveryRatingbar = deliveryRatingbar;
    this.description = description;
    this.goodqualityRatingbar = goodqualityRatingbar;
    this.gridViewImageText = gridViewImageText;
    this.mainlv = mainlv;
    this.popRatingbar = popRatingbar;
    this.professionalRatingbar = professionalRatingbar;
    this.ratinglayout = ratinglayout;
    this.responsiveRatingbar = responsiveRatingbar;
    this.shopkeeperImage = shopkeeperImage;
    this.shopkeeperName = shopkeeperName;
    this.shopname = shopname;
    this.shoprating = shoprating;
    this.slider = slider;
    this.svContainer = svContainer;
    this.tempid = tempid;
    this.topview = topview;
    this.view = view;
    this.viewObj = viewObj;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cdView;
      CardView cdView = rootView.findViewById(id);
      if (cdView == null) {
        break missingId;
      }

      id = R.id.content_main;
      FrameLayout contentMain = rootView.findViewById(id);
      if (contentMain == null) {
        break missingId;
      }

      id = R.id.custom_indicator;
      PagerIndicator customIndicator = rootView.findViewById(id);
      if (customIndicator == null) {
        break missingId;
      }

      id = R.id.delivery_ratingbar;
      RatingBar deliveryRatingbar = rootView.findViewById(id);
      if (deliveryRatingbar == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = rootView.findViewById(id);
      if (description == null) {
        break missingId;
      }

      id = R.id.goodquality_ratingbar;
      RatingBar goodqualityRatingbar = rootView.findViewById(id);
      if (goodqualityRatingbar == null) {
        break missingId;
      }

      id = R.id.grid_view_image_text;
      GridView gridViewImageText = rootView.findViewById(id);
      if (gridViewImageText == null) {
        break missingId;
      }

      id = R.id.mainlv;
      LinearLayout mainlv = rootView.findViewById(id);
      if (mainlv == null) {
        break missingId;
      }

      id = R.id.pop_ratingbar;
      RatingBar popRatingbar = rootView.findViewById(id);
      if (popRatingbar == null) {
        break missingId;
      }

      id = R.id.professional_ratingbar;
      RatingBar professionalRatingbar = rootView.findViewById(id);
      if (professionalRatingbar == null) {
        break missingId;
      }

      id = R.id.ratinglayout;
      LinearLayout ratinglayout = rootView.findViewById(id);
      if (ratinglayout == null) {
        break missingId;
      }

      id = R.id.responsive_ratingbar;
      RatingBar responsiveRatingbar = rootView.findViewById(id);
      if (responsiveRatingbar == null) {
        break missingId;
      }

      id = R.id.shopkeeper_image;
      CircleImageView shopkeeperImage = rootView.findViewById(id);
      if (shopkeeperImage == null) {
        break missingId;
      }

      id = R.id.shopkeeper_name;
      TextView shopkeeperName = rootView.findViewById(id);
      if (shopkeeperName == null) {
        break missingId;
      }

      id = R.id.shopname;
      TextView shopname = rootView.findViewById(id);
      if (shopname == null) {
        break missingId;
      }

      id = R.id.shoprating;
      TextView shoprating = rootView.findViewById(id);
      if (shoprating == null) {
        break missingId;
      }

      id = R.id.slider;
      SliderLayout slider = rootView.findViewById(id);
      if (slider == null) {
        break missingId;
      }

      id = R.id.sv_container;
      ScrollView svContainer = rootView.findViewById(id);
      if (svContainer == null) {
        break missingId;
      }

      id = R.id.tempid;
      RelativeLayout tempid = rootView.findViewById(id);
      if (tempid == null) {
        break missingId;
      }

      id = R.id.topview;
      RelativeLayout topview = rootView.findViewById(id);
      if (topview == null) {
        break missingId;
      }

      id = R.id.view;
      View view = rootView.findViewById(id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view_obj;
      Button viewObj = rootView.findViewById(id);
      if (viewObj == null) {
        break missingId;
      }

      return new ContentMainBinding((RelativeLayout) rootView, cdView, contentMain, customIndicator,
          deliveryRatingbar, description, goodqualityRatingbar, gridViewImageText, mainlv,
          popRatingbar, professionalRatingbar, ratinglayout, responsiveRatingbar, shopkeeperImage,
          shopkeeperName, shopname, shoprating, slider, svContainer, tempid, topview, view,
          viewObj);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
