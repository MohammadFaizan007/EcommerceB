// Generated by view binder compiler. Do not edit!
package com.inlog.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.inlog.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddressBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAddAddressId;

  @NonNull
  public final CheckBox checkSetAsDefaultAddress;

  @NonNull
  public final EditText edtFirstName;

  @NonNull
  public final EditText edtLastName;

  @NonNull
  public final EditText edtPhoineNumber;

  @NonNull
  public final EditText edtVApartmentName;

  @NonNull
  public final EditText edtVAreaDetails;

  @NonNull
  public final EditText edtVEmailId;

  @NonNull
  public final EditText edtVHouseNo;

  @NonNull
  public final EditText edtVLandmark;

  @NonNull
  public final AutoCompleteTextView edtVPincode;

  @NonNull
  public final EditText edtVStreetDetailsToLocateYou;

  @NonNull
  public final LinearLayout llEditNamePhoneId;

  @NonNull
  public final RelativeLayout rlNamePhoneDetailId;

  @NonNull
  public final Spinner spinnerCity;

  @NonNull
  public final Spinner spinnerStateId;

  @NonNull
  public final TextView txtVHome;

  @NonNull
  public final TextView txtVName;

  @NonNull
  public final TextView txtVOffice;

  @NonNull
  public final TextView txtVOther;

  @NonNull
  public final TextView txtVPhone;

  private FragmentAddressBinding(@NonNull LinearLayout rootView, @NonNull Button btnAddAddressId,
      @NonNull CheckBox checkSetAsDefaultAddress, @NonNull EditText edtFirstName,
      @NonNull EditText edtLastName, @NonNull EditText edtPhoineNumber,
      @NonNull EditText edtVApartmentName, @NonNull EditText edtVAreaDetails,
      @NonNull EditText edtVEmailId, @NonNull EditText edtVHouseNo, @NonNull EditText edtVLandmark,
      @NonNull AutoCompleteTextView edtVPincode, @NonNull EditText edtVStreetDetailsToLocateYou,
      @NonNull LinearLayout llEditNamePhoneId, @NonNull RelativeLayout rlNamePhoneDetailId,
      @NonNull Spinner spinnerCity, @NonNull Spinner spinnerStateId, @NonNull TextView txtVHome,
      @NonNull TextView txtVName, @NonNull TextView txtVOffice, @NonNull TextView txtVOther,
      @NonNull TextView txtVPhone) {
    this.rootView = rootView;
    this.btnAddAddressId = btnAddAddressId;
    this.checkSetAsDefaultAddress = checkSetAsDefaultAddress;
    this.edtFirstName = edtFirstName;
    this.edtLastName = edtLastName;
    this.edtPhoineNumber = edtPhoineNumber;
    this.edtVApartmentName = edtVApartmentName;
    this.edtVAreaDetails = edtVAreaDetails;
    this.edtVEmailId = edtVEmailId;
    this.edtVHouseNo = edtVHouseNo;
    this.edtVLandmark = edtVLandmark;
    this.edtVPincode = edtVPincode;
    this.edtVStreetDetailsToLocateYou = edtVStreetDetailsToLocateYou;
    this.llEditNamePhoneId = llEditNamePhoneId;
    this.rlNamePhoneDetailId = rlNamePhoneDetailId;
    this.spinnerCity = spinnerCity;
    this.spinnerStateId = spinnerStateId;
    this.txtVHome = txtVHome;
    this.txtVName = txtVName;
    this.txtVOffice = txtVOffice;
    this.txtVOther = txtVOther;
    this.txtVPhone = txtVPhone;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddAddressId;
      Button btnAddAddressId = rootView.findViewById(id);
      if (btnAddAddressId == null) {
        break missingId;
      }

      id = R.id.checkSetAsDefaultAddress;
      CheckBox checkSetAsDefaultAddress = rootView.findViewById(id);
      if (checkSetAsDefaultAddress == null) {
        break missingId;
      }

      id = R.id.edtFirstName;
      EditText edtFirstName = rootView.findViewById(id);
      if (edtFirstName == null) {
        break missingId;
      }

      id = R.id.edtLastName;
      EditText edtLastName = rootView.findViewById(id);
      if (edtLastName == null) {
        break missingId;
      }

      id = R.id.edtPhoineNumber;
      EditText edtPhoineNumber = rootView.findViewById(id);
      if (edtPhoineNumber == null) {
        break missingId;
      }

      id = R.id.edtVApartmentName;
      EditText edtVApartmentName = rootView.findViewById(id);
      if (edtVApartmentName == null) {
        break missingId;
      }

      id = R.id.edtVAreaDetails;
      EditText edtVAreaDetails = rootView.findViewById(id);
      if (edtVAreaDetails == null) {
        break missingId;
      }

      id = R.id.edtVEmailId;
      EditText edtVEmailId = rootView.findViewById(id);
      if (edtVEmailId == null) {
        break missingId;
      }

      id = R.id.edtVHouseNo;
      EditText edtVHouseNo = rootView.findViewById(id);
      if (edtVHouseNo == null) {
        break missingId;
      }

      id = R.id.edtVLandmark;
      EditText edtVLandmark = rootView.findViewById(id);
      if (edtVLandmark == null) {
        break missingId;
      }

      id = R.id.edtVPincode;
      AutoCompleteTextView edtVPincode = rootView.findViewById(id);
      if (edtVPincode == null) {
        break missingId;
      }

      id = R.id.edtVStreetDetailsToLocateYou;
      EditText edtVStreetDetailsToLocateYou = rootView.findViewById(id);
      if (edtVStreetDetailsToLocateYou == null) {
        break missingId;
      }

      id = R.id.llEditNamePhoneId;
      LinearLayout llEditNamePhoneId = rootView.findViewById(id);
      if (llEditNamePhoneId == null) {
        break missingId;
      }

      id = R.id.rlNamePhoneDetailId;
      RelativeLayout rlNamePhoneDetailId = rootView.findViewById(id);
      if (rlNamePhoneDetailId == null) {
        break missingId;
      }

      id = R.id.spinnerCity;
      Spinner spinnerCity = rootView.findViewById(id);
      if (spinnerCity == null) {
        break missingId;
      }

      id = R.id.spinnerStateId;
      Spinner spinnerStateId = rootView.findViewById(id);
      if (spinnerStateId == null) {
        break missingId;
      }

      id = R.id.txtVHome;
      TextView txtVHome = rootView.findViewById(id);
      if (txtVHome == null) {
        break missingId;
      }

      id = R.id.txtVName;
      TextView txtVName = rootView.findViewById(id);
      if (txtVName == null) {
        break missingId;
      }

      id = R.id.txtVOffice;
      TextView txtVOffice = rootView.findViewById(id);
      if (txtVOffice == null) {
        break missingId;
      }

      id = R.id.txtVOther;
      TextView txtVOther = rootView.findViewById(id);
      if (txtVOther == null) {
        break missingId;
      }

      id = R.id.txtVPhone;
      TextView txtVPhone = rootView.findViewById(id);
      if (txtVPhone == null) {
        break missingId;
      }

      return new FragmentAddressBinding((LinearLayout) rootView, btnAddAddressId,
          checkSetAsDefaultAddress, edtFirstName, edtLastName, edtPhoineNumber, edtVApartmentName,
          edtVAreaDetails, edtVEmailId, edtVHouseNo, edtVLandmark, edtVPincode,
          edtVStreetDetailsToLocateYou, llEditNamePhoneId, rlNamePhoneDetailId, spinnerCity,
          spinnerStateId, txtVHome, txtVName, txtVOffice, txtVOther, txtVPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
