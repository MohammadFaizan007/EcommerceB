// Generated by view binder compiler. Do not edit!
package com.inlog.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager.widget.ViewPager;
import com.inlog.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityItemDetailsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout activityItemDetails;

  @NonNull
  public final LinearLayout addcartview;

  @NonNull
  public final LinearLayout apriori;

  @NonNull
  public final Button back;

  @NonNull
  public final Button closeObj;

  @NonNull
  public final RecyclerView comboRecycVId;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final TextView descriptionPart;

  @NonNull
  public final TextView header;

  @NonNull
  public final TextView itemDetailName;

  @NonNull
  public final LinearLayout layio;

  @NonNull
  public final LinearLayout layoutAction1;

  @NonNull
  public final LinearLayout layoutAction2;

  @NonNull
  public final LinearLayout layoutAction3;

  @NonNull
  public final LinearLayout layoutItemDesc;

  @NonNull
  public final CardView less;

  @NonNull
  public final TextView listItemPrice;

  @NonNull
  public final TextView listItemSalePrice;

  @NonNull
  public final ListView listview;

  @NonNull
  public final LinearLayout llComboProductsId;

  @NonNull
  public final LinearLayout llReviewId;

  @NonNull
  public final CardView more;

  @NonNull
  public final RelativeLayout movieDetail;

  @NonNull
  public final ImageView next;

  @NonNull
  public final RelativeLayout onev;

  @NonNull
  public final ViewPager pager;

  @NonNull
  public final RelativeLayout pagermainpop;

  @NonNull
  public final ImageView prev;

  @NonNull
  public final EditText prnumber;

  @NonNull
  public final RecyclerView rcyVProductVarients;

  @NonNull
  public final RecyclerView rcyVProductVarientsSize;

  @NonNull
  public final RelativeLayout rlDescriptionId;

  @NonNull
  public final RelativeLayout rlSpecificationsId;

  @NonNull
  public final NestedScrollView scrollbar;

  @NonNull
  public final TextView searchDesc;

  @NonNull
  public final ImageView searchImage;

  @NonNull
  public final TextView searchName;

  @NonNull
  public final TextView searchPrice;

  @NonNull
  public final View tabBottomLine;

  @NonNull
  public final View tabBottomSpeciLine;

  @NonNull
  public final TextView textAction1;

  @NonNull
  public final TextView textAction2;

  @NonNull
  public final TextView textAction3;

  @NonNull
  public final TextView textActionBottom1;

  @NonNull
  public final TextView textActionBottom2;

  @NonNull
  public final LinearLayout textLayout;

  @NonNull
  public final TextView textRatings;

  @NonNull
  public final TextView textRatingsReviews;

  @NonNull
  public final TextView txtVIdAttributeLabelId;

  @NonNull
  public final TextView txtVIdAttributeSizeLabelId;

  @NonNull
  public final TextView txtVSpeci;

  @NonNull
  public final ViewPager viewPager;

  private ActivityItemDetailsBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout activityItemDetails, @NonNull LinearLayout addcartview,
      @NonNull LinearLayout apriori, @NonNull Button back, @NonNull Button closeObj,
      @NonNull RecyclerView comboRecycVId, @NonNull LinearLayout container,
      @NonNull TextView descriptionPart, @NonNull TextView header, @NonNull TextView itemDetailName,
      @NonNull LinearLayout layio, @NonNull LinearLayout layoutAction1,
      @NonNull LinearLayout layoutAction2, @NonNull LinearLayout layoutAction3,
      @NonNull LinearLayout layoutItemDesc, @NonNull CardView less, @NonNull TextView listItemPrice,
      @NonNull TextView listItemSalePrice, @NonNull ListView listview,
      @NonNull LinearLayout llComboProductsId, @NonNull LinearLayout llReviewId,
      @NonNull CardView more, @NonNull RelativeLayout movieDetail, @NonNull ImageView next,
      @NonNull RelativeLayout onev, @NonNull ViewPager pager, @NonNull RelativeLayout pagermainpop,
      @NonNull ImageView prev, @NonNull EditText prnumber,
      @NonNull RecyclerView rcyVProductVarients, @NonNull RecyclerView rcyVProductVarientsSize,
      @NonNull RelativeLayout rlDescriptionId, @NonNull RelativeLayout rlSpecificationsId,
      @NonNull NestedScrollView scrollbar, @NonNull TextView searchDesc,
      @NonNull ImageView searchImage, @NonNull TextView searchName, @NonNull TextView searchPrice,
      @NonNull View tabBottomLine, @NonNull View tabBottomSpeciLine, @NonNull TextView textAction1,
      @NonNull TextView textAction2, @NonNull TextView textAction3,
      @NonNull TextView textActionBottom1, @NonNull TextView textActionBottom2,
      @NonNull LinearLayout textLayout, @NonNull TextView textRatings,
      @NonNull TextView textRatingsReviews, @NonNull TextView txtVIdAttributeLabelId,
      @NonNull TextView txtVIdAttributeSizeLabelId, @NonNull TextView txtVSpeci,
      @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.activityItemDetails = activityItemDetails;
    this.addcartview = addcartview;
    this.apriori = apriori;
    this.back = back;
    this.closeObj = closeObj;
    this.comboRecycVId = comboRecycVId;
    this.container = container;
    this.descriptionPart = descriptionPart;
    this.header = header;
    this.itemDetailName = itemDetailName;
    this.layio = layio;
    this.layoutAction1 = layoutAction1;
    this.layoutAction2 = layoutAction2;
    this.layoutAction3 = layoutAction3;
    this.layoutItemDesc = layoutItemDesc;
    this.less = less;
    this.listItemPrice = listItemPrice;
    this.listItemSalePrice = listItemSalePrice;
    this.listview = listview;
    this.llComboProductsId = llComboProductsId;
    this.llReviewId = llReviewId;
    this.more = more;
    this.movieDetail = movieDetail;
    this.next = next;
    this.onev = onev;
    this.pager = pager;
    this.pagermainpop = pagermainpop;
    this.prev = prev;
    this.prnumber = prnumber;
    this.rcyVProductVarients = rcyVProductVarients;
    this.rcyVProductVarientsSize = rcyVProductVarientsSize;
    this.rlDescriptionId = rlDescriptionId;
    this.rlSpecificationsId = rlSpecificationsId;
    this.scrollbar = scrollbar;
    this.searchDesc = searchDesc;
    this.searchImage = searchImage;
    this.searchName = searchName;
    this.searchPrice = searchPrice;
    this.tabBottomLine = tabBottomLine;
    this.tabBottomSpeciLine = tabBottomSpeciLine;
    this.textAction1 = textAction1;
    this.textAction2 = textAction2;
    this.textAction3 = textAction3;
    this.textActionBottom1 = textActionBottom1;
    this.textActionBottom2 = textActionBottom2;
    this.textLayout = textLayout;
    this.textRatings = textRatings;
    this.textRatingsReviews = textRatingsReviews;
    this.txtVIdAttributeLabelId = txtVIdAttributeLabelId;
    this.txtVIdAttributeSizeLabelId = txtVIdAttributeSizeLabelId;
    this.txtVSpeci = txtVSpeci;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityItemDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityItemDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_item_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityItemDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout activityItemDetails = (RelativeLayout) rootView;

      id = R.id.addcartview;
      LinearLayout addcartview = rootView.findViewById(id);
      if (addcartview == null) {
        break missingId;
      }

      id = R.id.apriori;
      LinearLayout apriori = rootView.findViewById(id);
      if (apriori == null) {
        break missingId;
      }

      id = R.id.back;
      Button back = rootView.findViewById(id);
      if (back == null) {
        break missingId;
      }

      id = R.id.close_obj;
      Button closeObj = rootView.findViewById(id);
      if (closeObj == null) {
        break missingId;
      }

      id = R.id.comboRecycVId;
      RecyclerView comboRecycVId = rootView.findViewById(id);
      if (comboRecycVId == null) {
        break missingId;
      }

      id = R.id.container;
      LinearLayout container = rootView.findViewById(id);
      if (container == null) {
        break missingId;
      }

      id = R.id.description_part;
      TextView descriptionPart = rootView.findViewById(id);
      if (descriptionPart == null) {
        break missingId;
      }

      id = R.id.header;
      TextView header = rootView.findViewById(id);
      if (header == null) {
        break missingId;
      }

      id = R.id.item_detail_name;
      TextView itemDetailName = rootView.findViewById(id);
      if (itemDetailName == null) {
        break missingId;
      }

      id = R.id.layio;
      LinearLayout layio = rootView.findViewById(id);
      if (layio == null) {
        break missingId;
      }

      id = R.id.layout_action1;
      LinearLayout layoutAction1 = rootView.findViewById(id);
      if (layoutAction1 == null) {
        break missingId;
      }

      id = R.id.layout_action2;
      LinearLayout layoutAction2 = rootView.findViewById(id);
      if (layoutAction2 == null) {
        break missingId;
      }

      id = R.id.layout_action3;
      LinearLayout layoutAction3 = rootView.findViewById(id);
      if (layoutAction3 == null) {
        break missingId;
      }

      id = R.id.layout_item_desc;
      LinearLayout layoutItemDesc = rootView.findViewById(id);
      if (layoutItemDesc == null) {
        break missingId;
      }

      id = R.id.less;
      CardView less = rootView.findViewById(id);
      if (less == null) {
        break missingId;
      }

      id = R.id.list_item_price;
      TextView listItemPrice = rootView.findViewById(id);
      if (listItemPrice == null) {
        break missingId;
      }

      id = R.id.list_item_sale_price;
      TextView listItemSalePrice = rootView.findViewById(id);
      if (listItemSalePrice == null) {
        break missingId;
      }

      id = R.id.listview;
      ListView listview = rootView.findViewById(id);
      if (listview == null) {
        break missingId;
      }

      id = R.id.llComboProductsId;
      LinearLayout llComboProductsId = rootView.findViewById(id);
      if (llComboProductsId == null) {
        break missingId;
      }

      id = R.id.llReviewId;
      LinearLayout llReviewId = rootView.findViewById(id);
      if (llReviewId == null) {
        break missingId;
      }

      id = R.id.more;
      CardView more = rootView.findViewById(id);
      if (more == null) {
        break missingId;
      }

      id = R.id.movie_detail;
      RelativeLayout movieDetail = rootView.findViewById(id);
      if (movieDetail == null) {
        break missingId;
      }

      id = R.id.next;
      ImageView next = rootView.findViewById(id);
      if (next == null) {
        break missingId;
      }

      id = R.id.onev;
      RelativeLayout onev = rootView.findViewById(id);
      if (onev == null) {
        break missingId;
      }

      id = R.id.pager;
      ViewPager pager = rootView.findViewById(id);
      if (pager == null) {
        break missingId;
      }

      id = R.id.pagermainpop;
      RelativeLayout pagermainpop = rootView.findViewById(id);
      if (pagermainpop == null) {
        break missingId;
      }

      id = R.id.prev;
      ImageView prev = rootView.findViewById(id);
      if (prev == null) {
        break missingId;
      }

      id = R.id.prnumber;
      EditText prnumber = rootView.findViewById(id);
      if (prnumber == null) {
        break missingId;
      }

      id = R.id.rcyVProductVarients;
      RecyclerView rcyVProductVarients = rootView.findViewById(id);
      if (rcyVProductVarients == null) {
        break missingId;
      }

      id = R.id.rcyVProductVarientsSize;
      RecyclerView rcyVProductVarientsSize = rootView.findViewById(id);
      if (rcyVProductVarientsSize == null) {
        break missingId;
      }

      id = R.id.rlDescriptionId;
      RelativeLayout rlDescriptionId = rootView.findViewById(id);
      if (rlDescriptionId == null) {
        break missingId;
      }

      id = R.id.rlSpecificationsId;
      RelativeLayout rlSpecificationsId = rootView.findViewById(id);
      if (rlSpecificationsId == null) {
        break missingId;
      }

      id = R.id.scrollbar;
      NestedScrollView scrollbar = rootView.findViewById(id);
      if (scrollbar == null) {
        break missingId;
      }

      id = R.id.search_desc;
      TextView searchDesc = rootView.findViewById(id);
      if (searchDesc == null) {
        break missingId;
      }

      id = R.id.search_image;
      ImageView searchImage = rootView.findViewById(id);
      if (searchImage == null) {
        break missingId;
      }

      id = R.id.search_name;
      TextView searchName = rootView.findViewById(id);
      if (searchName == null) {
        break missingId;
      }

      id = R.id.search_price;
      TextView searchPrice = rootView.findViewById(id);
      if (searchPrice == null) {
        break missingId;
      }

      id = R.id.tabBottomLine;
      View tabBottomLine = rootView.findViewById(id);
      if (tabBottomLine == null) {
        break missingId;
      }

      id = R.id.tabBottomSpeciLine;
      View tabBottomSpeciLine = rootView.findViewById(id);
      if (tabBottomSpeciLine == null) {
        break missingId;
      }

      id = R.id.text_action1;
      TextView textAction1 = rootView.findViewById(id);
      if (textAction1 == null) {
        break missingId;
      }

      id = R.id.text_action2;
      TextView textAction2 = rootView.findViewById(id);
      if (textAction2 == null) {
        break missingId;
      }

      id = R.id.text_action3;
      TextView textAction3 = rootView.findViewById(id);
      if (textAction3 == null) {
        break missingId;
      }

      id = R.id.text_action_bottom1;
      TextView textActionBottom1 = rootView.findViewById(id);
      if (textActionBottom1 == null) {
        break missingId;
      }

      id = R.id.text_action_bottom2;
      TextView textActionBottom2 = rootView.findViewById(id);
      if (textActionBottom2 == null) {
        break missingId;
      }

      id = R.id.text_layout;
      LinearLayout textLayout = rootView.findViewById(id);
      if (textLayout == null) {
        break missingId;
      }

      id = R.id.text_ratings;
      TextView textRatings = rootView.findViewById(id);
      if (textRatings == null) {
        break missingId;
      }

      id = R.id.text_ratings_reviews;
      TextView textRatingsReviews = rootView.findViewById(id);
      if (textRatingsReviews == null) {
        break missingId;
      }

      id = R.id.txtVIdAttributeLabelId;
      TextView txtVIdAttributeLabelId = rootView.findViewById(id);
      if (txtVIdAttributeLabelId == null) {
        break missingId;
      }

      id = R.id.txtVIdAttributeSizeLabelId;
      TextView txtVIdAttributeSizeLabelId = rootView.findViewById(id);
      if (txtVIdAttributeSizeLabelId == null) {
        break missingId;
      }

      id = R.id.txtVSpeci;
      TextView txtVSpeci = rootView.findViewById(id);
      if (txtVSpeci == null) {
        break missingId;
      }

      id = R.id.view_pager;
      ViewPager viewPager = rootView.findViewById(id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityItemDetailsBinding((RelativeLayout) rootView, activityItemDetails,
          addcartview, apriori, back, closeObj, comboRecycVId, container, descriptionPart, header,
          itemDetailName, layio, layoutAction1, layoutAction2, layoutAction3, layoutItemDesc, less,
          listItemPrice, listItemSalePrice, listview, llComboProductsId, llReviewId, more,
          movieDetail, next, onev, pager, pagermainpop, prev, prnumber, rcyVProductVarients,
          rcyVProductVarientsSize, rlDescriptionId, rlSpecificationsId, scrollbar, searchDesc,
          searchImage, searchName, searchPrice, tabBottomLine, tabBottomSpeciLine, textAction1,
          textAction2, textAction3, textActionBottom1, textActionBottom2, textLayout, textRatings,
          textRatingsReviews, txtVIdAttributeLabelId, txtVIdAttributeSizeLabelId, txtVSpeci,
          viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
