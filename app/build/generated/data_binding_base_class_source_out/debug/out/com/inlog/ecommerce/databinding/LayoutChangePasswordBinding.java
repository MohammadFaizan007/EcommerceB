// Generated by view binder compiler. Do not edit!
package com.inlog.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputLayout;
import com.inlog.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutChangePasswordBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton btnSubmit;

  @NonNull
  public final AppCompatEditText editConfirm;

  @NonNull
  public final AppCompatEditText editExisting;

  @NonNull
  public final AppCompatEditText editNew;

  @NonNull
  public final TextInputLayout txtILayoutConfirm;

  @NonNull
  public final TextInputLayout txtILayoutExisting;

  @NonNull
  public final TextInputLayout txtILayoutNew;

  private LayoutChangePasswordBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatButton btnSubmit, @NonNull AppCompatEditText editConfirm,
      @NonNull AppCompatEditText editExisting, @NonNull AppCompatEditText editNew,
      @NonNull TextInputLayout txtILayoutConfirm, @NonNull TextInputLayout txtILayoutExisting,
      @NonNull TextInputLayout txtILayoutNew) {
    this.rootView = rootView;
    this.btnSubmit = btnSubmit;
    this.editConfirm = editConfirm;
    this.editExisting = editExisting;
    this.editNew = editNew;
    this.txtILayoutConfirm = txtILayoutConfirm;
    this.txtILayoutExisting = txtILayoutExisting;
    this.txtILayoutNew = txtILayoutNew;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSubmit;
      AppCompatButton btnSubmit = rootView.findViewById(id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.editConfirm;
      AppCompatEditText editConfirm = rootView.findViewById(id);
      if (editConfirm == null) {
        break missingId;
      }

      id = R.id.editExisting;
      AppCompatEditText editExisting = rootView.findViewById(id);
      if (editExisting == null) {
        break missingId;
      }

      id = R.id.editNew;
      AppCompatEditText editNew = rootView.findViewById(id);
      if (editNew == null) {
        break missingId;
      }

      id = R.id.txtILayoutConfirm;
      TextInputLayout txtILayoutConfirm = rootView.findViewById(id);
      if (txtILayoutConfirm == null) {
        break missingId;
      }

      id = R.id.txtILayoutExisting;
      TextInputLayout txtILayoutExisting = rootView.findViewById(id);
      if (txtILayoutExisting == null) {
        break missingId;
      }

      id = R.id.txtILayoutNew;
      TextInputLayout txtILayoutNew = rootView.findViewById(id);
      if (txtILayoutNew == null) {
        break missingId;
      }

      return new LayoutChangePasswordBinding((LinearLayout) rootView, btnSubmit, editConfirm,
          editExisting, editNew, txtILayoutConfirm, txtILayoutExisting, txtILayoutNew);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
