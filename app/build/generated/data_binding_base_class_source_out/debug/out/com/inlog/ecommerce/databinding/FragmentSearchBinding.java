// Generated by view binder compiler. Do not edit!
package com.inlog.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.inlog.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatImageView btnClear;

  @NonNull
  public final AppCompatImageView btnSpeakSearch;

  @NonNull
  public final AppCompatEditText etSearchTxt;

  @NonNull
  public final AppCompatImageView imgBackSearch;

  @NonNull
  public final AppCompatImageView imgScan;

  @NonNull
  public final RecyclerView rvSearch;

  private FragmentSearchBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatImageView btnClear, @NonNull AppCompatImageView btnSpeakSearch,
      @NonNull AppCompatEditText etSearchTxt, @NonNull AppCompatImageView imgBackSearch,
      @NonNull AppCompatImageView imgScan, @NonNull RecyclerView rvSearch) {
    this.rootView = rootView;
    this.btnClear = btnClear;
    this.btnSpeakSearch = btnSpeakSearch;
    this.etSearchTxt = etSearchTxt;
    this.imgBackSearch = imgBackSearch;
    this.imgScan = imgScan;
    this.rvSearch = rvSearch;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_clear;
      AppCompatImageView btnClear = rootView.findViewById(id);
      if (btnClear == null) {
        break missingId;
      }

      id = R.id.btn_speak_search;
      AppCompatImageView btnSpeakSearch = rootView.findViewById(id);
      if (btnSpeakSearch == null) {
        break missingId;
      }

      id = R.id.et_search_txt;
      AppCompatEditText etSearchTxt = rootView.findViewById(id);
      if (etSearchTxt == null) {
        break missingId;
      }

      id = R.id.img_back_search;
      AppCompatImageView imgBackSearch = rootView.findViewById(id);
      if (imgBackSearch == null) {
        break missingId;
      }

      id = R.id.img_scan;
      AppCompatImageView imgScan = rootView.findViewById(id);
      if (imgScan == null) {
        break missingId;
      }

      id = R.id.rv_search;
      RecyclerView rvSearch = rootView.findViewById(id);
      if (rvSearch == null) {
        break missingId;
      }

      return new FragmentSearchBinding((LinearLayout) rootView, btnClear, btnSpeakSearch,
          etSearchTxt, imgBackSearch, imgScan, rvSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
