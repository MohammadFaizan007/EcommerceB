// Generated by view binder compiler. Do not edit!
package com.inlog.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.inlog.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMyAccountBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgEdit;

  @NonNull
  public final ImageView imgUser;

  @NonNull
  public final LinearLayout llDetails;

  @NonNull
  public final RecyclerView rcyAccountList;

  @NonNull
  public final NestedScrollView scrollViewId;

  @NonNull
  public final TextView txtVEmail;

  @NonNull
  public final TextView txtVName;

  @NonNull
  public final TextView txtVPhone;

  private FragmentMyAccountBinding(@NonNull LinearLayout rootView, @NonNull ImageView imgEdit,
      @NonNull ImageView imgUser, @NonNull LinearLayout llDetails,
      @NonNull RecyclerView rcyAccountList, @NonNull NestedScrollView scrollViewId,
      @NonNull TextView txtVEmail, @NonNull TextView txtVName, @NonNull TextView txtVPhone) {
    this.rootView = rootView;
    this.imgEdit = imgEdit;
    this.imgUser = imgUser;
    this.llDetails = llDetails;
    this.rcyAccountList = rcyAccountList;
    this.scrollViewId = scrollViewId;
    this.txtVEmail = txtVEmail;
    this.txtVName = txtVName;
    this.txtVPhone = txtVPhone;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMyAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMyAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_my_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMyAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgEdit;
      ImageView imgEdit = rootView.findViewById(id);
      if (imgEdit == null) {
        break missingId;
      }

      id = R.id.imgUser;
      ImageView imgUser = rootView.findViewById(id);
      if (imgUser == null) {
        break missingId;
      }

      id = R.id.llDetails;
      LinearLayout llDetails = rootView.findViewById(id);
      if (llDetails == null) {
        break missingId;
      }

      id = R.id.rcyAccountList;
      RecyclerView rcyAccountList = rootView.findViewById(id);
      if (rcyAccountList == null) {
        break missingId;
      }

      id = R.id.scrollViewId;
      NestedScrollView scrollViewId = rootView.findViewById(id);
      if (scrollViewId == null) {
        break missingId;
      }

      id = R.id.txtVEmail;
      TextView txtVEmail = rootView.findViewById(id);
      if (txtVEmail == null) {
        break missingId;
      }

      id = R.id.txtVName;
      TextView txtVName = rootView.findViewById(id);
      if (txtVName == null) {
        break missingId;
      }

      id = R.id.txtVPhone;
      TextView txtVPhone = rootView.findViewById(id);
      if (txtVPhone == null) {
        break missingId;
      }

      return new FragmentMyAccountBinding((LinearLayout) rootView, imgEdit, imgUser, llDetails,
          rcyAccountList, scrollViewId, txtVEmail, txtVName, txtVPhone);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
